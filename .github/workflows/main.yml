name: Generate snake game

on:
  schedule:
    - cron: "0 0 * * *" # Exécuter à minuit tous les jours
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Generate snake animation
        uses: Platane/snk@v3
        with:
          github_user_name: ${{ github.repository_owner }}
          outputs: |
            dist/github-snake.svg
            dist/github-snake-dark.svg?palette=github-dark
            dist/ocean.gif?color_snake=orange&color_dots=#bfd6f6,#8dbdff,#64a1f4,#4b91f1,#3c7dd9

      - name: Clone and aggregate repositories
        run: |
          mkdir -p org-repos
          cd org-repos
          for org in $(gh api user/orgs --jq '.[].login'); do
            for repo in $(gh repo list $org --limit 100 --json name -q '.[].name'); do
              git clone https://github.com/$org/$repo.git || true
            done
          done
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_SNAKE }}

      - name: Force remove specific files
        run: |
          sudo rm -f dist/github-snake-dark.svg dist/ocean.gif dist/github-snake.svg

      - name: Clean untracked files
        run: sudo git clean -fd

      - name: Create output branch if it doesn't exist
        run: |
          git fetch origin
          if ! git rev-parse --verify origin/output; then
            git checkout -b output
            git push origin output
          else
            git checkout output
          fi

      - name: Add generated files
        run: git add dist/*

      - name: Commit and Push changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git commit -m "Generated snake animation" || echo "No changes to commit"
          git push origin output --force
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_SNAKE }}
