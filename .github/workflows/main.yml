name: Generate snake game

on:
  schedule:
    - cron: "0 0 * * *" # Runs at midnight every day
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Generate snake animation
        uses: Platane/snk@v3
        with:
          github_user_name: ${{ github.repository_owner }}
          outputs: |
            dist/github-snake.svg
            dist/github-snake-dark.svg?palette=github-dark
            dist/ocean.gif?color_snake=orange&color_dots=#bfd6f6,#8dbdff,#64a1f4,#4b91f1,#3c7dd9

      - name: Verify generated files
        run: |
          if [ ! -d dist ]; then
            echo "dist directory does not exist."
            exit 1
          fi
          if [ ! "$(ls -A dist)" ]; then
            echo "No files generated in dist directory."
            exit 1
          fi
          echo "Generated files:"
          ls -la dist

      - name: Initialize repository and add submodules
        run: |
          mkdir -p org-repos
          cd org-repos
          for org in $(gh api user/orgs --jq '.[].login'); do
            for repo in $(gh repo list $org --limit 100 --json name,defaultBranchRef -q '.[] | select(.defaultBranchRef != null) | .name'); do
              echo "Checking $org/$repo"
              if [ "$(gh api repos/$org/$repo/branches --jq '.[] | select(.protected == false) | .name')" ]; then
                echo "Cloning $org/$repo"
                git submodule add https://$GITHUB_TOKEN@github.com/$org/$repo.git $org/$repo || echo "Failed to add $org/$repo as a submodule"
              else
                echo "Skipping $org/$repo (no unprotected branches or empty repository)"
              fi
            done
          done
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_SNAKE }}

      - name: Commit and push submodules
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add .gitmodules org-repos
          git commit -m "Added submodules for organization repositories"
          git push origin main

      - name: Create output branch if it doesn't exist
        run: |
          git fetch origin
          if ! git rev-parse --verify origin/output; then
            git checkout -b output
            git push origin output
          else
            git checkout output
          fi

      - name: Copy generated files to output branch
        run: |
          cp -r dist/* .
          git add *.svg *.gif
          git commit -m "Generated snake animation" || echo "No changes to commit"

      - name: Push changes to output branch
        run: git push origin output --force
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_SNAKE }}
